# docker box definition
box:
  id: clojure:lein-2.7.1-alpine
  ports:
    - "5000"

# defining the dev pipeline
dev:
  steps:
    - script:
      name: lein ring
      code: |
        lein ring server-headless

# Build definition
build:
  steps:
    - script:
        name: lein uberjar
        code: |
          lein uberjar
    - script:
        name: move jar
        code: mv target/beard-api-1.0.0-SNAPSHOT-standalone.jar $WERCKER_OUTPUT_DIR/beard-api.jar

build-image:
  box:
    id: nate9/minimaljava8

  steps:
    - script:
        name: move jar
        code: |
          mkdir -p /app
          mv * /app

    - internal/docker-push:
        repository: wcr.io/dansmithy/beard-api
        tag: $WERCKER_GIT_BRANCH-$WERCKER_GIT_COMMIT,$WERCKER_GIT_COMMIT,latest
        cmd: java -jar /app/beard-api.jar
        working-dir: /app
        ports: "5000"

    - script:
        name: just write something
        code: touch $WERCKER_OUTPUT_DIR/empty_file

inject-secret:
    box:
        id: alpine
        cmd: /bin/sh
    steps:

    - kubectl:
        name: delete secret
        server: $KUBERNETES_MASTER
        token: $KUBERNETES_TOKEN
        insecure-skip-tls-verify: true
        command: delete secret wercker; echo delete registry secret

    - kubectl:
        name: create secret
        server: $KUBERNETES_MASTER
        token: $KUBERNETES_TOKEN
        insecure-skip-tls-verify: true
        command: create secret docker-registry wercker --docker-server=$DOCKER_REGISTRY --docker-username=$DOCKER_USERNAME --docker-password=$KUBERNETES_TOKEN --docker-email=$DOCKER_EMAIL; echo create registry secret

deploy-to-cluster:
    box:
        id: alpine
        cmd: /bin/sh
    steps:

    - bash-template

    - script:
        name: "Visualise Kubernetes config"
        code: cat kubernetes.yml

    - kubectl:
        name: deploy to kubernetes
        server: $KUBERNETES_MASTER
        token: $KUBERNETES_TOKEN
        insecure-skip-tls-verify: true
        command: apply -f kubernetes.yml